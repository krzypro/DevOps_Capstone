AWSTemplateFormatVersion: 2010-09-09
Description: Kubernetes environment setup - cluster hosts
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resources
        Type: String

    InstanceImageId:
        Description: EC2 ImageId specific for region
        Default: ami-04505e74c0741db8d # Ubuntu 20.04
        Type: String

Resources:

    K8sMasterSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Kubernetes Master Instances
            VpcId: 
                Fn::ImportValue: 
                    !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            -   IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 0.0.0.0/0
            -   IpProtocol: tcp
                FromPort: 30001
                ToPort: 30005
                CidrIp: 0.0.0.0/0
            -   IpProtocol: tcp # api on master
                FromPort: 6443
                ToPort: 6443
                CidrIp: 10.0.1.0/24
            -   IpProtocol: all # allow nodes to connect kube-dns on master
                FromPort: 53
                ToPort: 53
                CidrIp: 10.0.1.0/24
            SecurityGroupEgress:
            -   IpProtocol: tcp
                FromPort: 0
                ToPort: 65535
                CidrIp: 0.0.0.0/0

    K8sWorkerSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Kubernetes Nodes
            VpcId: 
                Fn::ImportValue: 
                    !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            -   IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 0.0.0.0/0
            -   IpProtocol: tcp # logs, metrics to master
                FromPort: 10250
                ToPort: 10250
                SourceSecurityGroupId: !Ref K8sMasterSecGroup
            -   IpProtocol: tcp # logs, metrics to master
                FromPort: 10255
                ToPort: 10255
                SourceSecurityGroupId: !Ref K8sMasterSecGroup
            -   IpProtocol: all # pod to pod communication
                FromPort: 0
                ToPort: 65535
                CidrIp: 10.0.1.0/24

    K8sMasterHost:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: !Ref InstanceImageId
            KeyName: CapstoneEC2s
            InstanceType: t3.small
            IamInstanceProfile: K8sMaster
            BlockDeviceMappings:
            -   DeviceName: "/dev/sdk"
                Ebs:
                    VolumeSize: 8
            NetworkInterfaces:
            -   SubnetId: 
                    Fn::ImportValue: !Sub "${EnvironmentName}-PUB-SN"
                DeviceIndex: "0"
                GroupSet:
                -   Ref: K8sMasterSecGroup
                PrivateIpAddress: 10.0.1.11
                AssociatePublicIpAddress: true
            Tags:
            -   Key: Name
                Value: !Sub ${EnvironmentName} K8s Master
            -   Key: !Sub kubernetes.io/cluster/${EnvironmentName}
                Value: owned

    K8sWorkerHost:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: !Ref InstanceImageId
            KeyName: CapstoneEC2s
            InstanceType: t2.micro
            IamInstanceProfile: K8sNode
            BlockDeviceMappings:
            -   DeviceName: "/dev/sdk"
                Ebs:
                    VolumeSize: 8
            NetworkInterfaces:
            -   SubnetId: 
                    Fn::ImportValue: !Sub "${EnvironmentName}-PUB-SN"
                DeviceIndex: "0"
                GroupSet:
                -   Ref: K8sWorkerSecGroup
                PrivateIpAddress: 10.0.1.12
                AssociatePublicIpAddress: true
            Tags:
            -   Key: Name
                Value: !Sub ${EnvironmentName} K8s Worker
            -   Key: !Sub kubernetes.io/cluster/${EnvironmentName}
                Value: owned
