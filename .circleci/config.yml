version: 2.1

commands:
  install_dotnet:
    steps:
      - run:
          name: Install .Net Core 6 SDK
          command: |
            sudo apt-get install wget
            wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
            sudo dpkg -i packages-microsoft-prod.deb
            sudo rm packages-microsoft-prod.deb
            sudo apt-get update; \
              sudo apt-get install -y apt-transport-https && \
              sudo apt-get update && \
              sudo apt-get install -y dotnet-sdk-6.0
  install_hadolint:
    steps:
      - run:
          name: Install hadolint
          command: |
            sudo apt-get install wget
            wget -O ~/hadolint https://github.com/hadolint/hadolint/releases/download/v2.8.0/hadolint-Linux-x86_64 &&\
              chmod +x ~/hadolint

executors:
  docker-builder:
    environment:
      IMAGE_NAME: pkrzysztoff/capstone-test-app
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  build-app:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - install_dotnet
      - run:
          name: Check dotnet
          command: dotnet --version
      - run:
          name: Build test application
          command: |
            cd testapp
            dotnet restore
            dotnet build -c Release
            dotnet publish -c Release
            ls bin/Release/net6.0/publish
      - persist_to_workspace:
          root: ./
          paths:
            - testapp/bin/Release/net6.0/publish/

  lint-app:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - install_dotnet
      - install_hadolint
      - run:
          name: Lint application
          command: |
            ~/hadolint Dockerfile
            cd testapp
            dotnet format --verify-no-changes

  docker-build:
    executor: docker-builder
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Save Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: ./
          paths: 
            - ./image.tar

  docker-publish:
    executor: docker-builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load Docker image from workspace
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKER_USER"
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $IMAGE_NAME:latest
  


workflows:
  default:
    jobs:
      - build-app

      # - lint-app:
      #     requires: [build-app]

      - docker-build:
          requires: [build-app]

      #     requires: [lint-app]
      - docker-publish:
          requires: [docker-build]